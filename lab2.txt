CREATE TABLE COUNTRIES AS SELECT * FROM HR.COUNTRIES;
CREATE TABLE DEPARTMENTS AS SELECT * FROM HR.DEPARTMENTS;
CREATE TABLE EMPLOYEES AS SELECT * FROM HR.EMPLOYEES;
CREATE TABLE JOB_GRADES AS SELECT * FROM HR.JOB_GRADES;
CREATE TABLE JOB_HISTORY AS SELECT * FROM HR.JOB_HISTORY;
CREATE TABLE JOBS AS SELECT * FROM HR.JOBS;
CREATE TABLE LOCATIONS AS SELECT * FROM HR.LOCATIONS;
CREATE TABLE REGIONS AS SELECT * FROM HR.REGIONS;

ALTER TABLE job_history
ADD PRIMARY KEY (employee_id,start_date);

ALTER TABLE countries
ADD PRIMARY KEY (country_id);

ALTER TABLE departments
ADD PRIMARY KEY (department_id);

ALTER TABLE employees
ADD PRIMARY KEY (employee_id);

ALTER TABLE jobs
ADD PRIMARY KEY (job_id);

ALTER TABLE locations
ADD PRIMARY KEY (location_id);

ALTER TABLE regions
ADD PRIMARY KEY (region_id);

ALTER TABLE countries
ADD FOREIGN KEY (region_id) REFERENCES regions(region_id);

ALTER TABLE departments
ADD FOREIGN KEY (manager_id) REFERENCES employees(employee_id);

ALTER TABLE departments
ADD FOREIGN KEY (location_id) REFERENCES locations(location_id);

ALTER TABLE employees
ADD FOREIGN KEY (job_id) REFERENCES jobs(job_id);

ALTER TABLE employees
ADD FOREIGN KEY (manager_id) REFERENCES employees(employee_id);

ALTER TABLE employees
ADD FOREIGN KEY (department_id) REFERENCES departments(department_id);

ALTER TABLE job_history
ADD FOREIGN KEY (job_id) REFERENCES jobs(job_id);

ALTER TABLE job_history
ADD FOREIGN KEY (department_id) REFERENCES departments(department_id);

ALTER TABLE locations
ADD FOREIGN KEY (country_id) REFERENCES countries(country_id);

SELECT CONCAT(last_name, salary) AS Wynagrodzenie FROM employees WHERE salary >= 2000 AND salary <= 7000 AND (department_id = 20 OR department_id = 50) ORDER BY Wynagrodzenie;
SELECT hire_date, last_name FROM employees WHERE manager_id is not null AND hire_date > date '2004-12-31' AND hire_date < date '2006-01-01' ORDER BY &selected_column;
SELECT CONCAT(CONCAT(first_name, ' '), last_name) AS name, salary, phone_number FROM employees WHERE INSTR(last_name, 'e', 3, 1) = 3 AND INSTR(first_name, '&name_path', 1, 1) != 0 ORDER BY name DESC;
SELECT first_name, last_name, ROUND(MONTHS_BETWEEN(sysdate, hire_date)) AS miesiace, CASE WHEN ROUND(MONTHS_BETWEEN(sysdate, hire_date))<150 THEN '10%' WHEN ROUND(MONTHS_BETWEEN(sysdate, hire_date))>200 THEN '30%' ELSE '20%' END dodatek FROM employees ORDER BY miesiace;
SELECT departments.department_name, SUM(salary) AS suma, ROUND(AVG(salary), 0) AS srednia FROM employees e1 JOIN departments on e1.department_id = departments.department_id WHERE 5000 < (SELECT MIN(salary) FROM employees e2 JOIN departments on e2.department_id = departments.department_id WHERE e1.department_id = e2.department_id) GROUP BY departments.department_name;
SELECT employees.last_name, employees.department_id, departments.department_name, employees.job_id FROM employees JOIN departments on employees.department_id = departments.department_id JOIN locations on departments.location_id = locations.location_id WHERE locations.city = 'Toronto';
SELECT e1.first_name, e1.last_name, e2.first_name, e2.last_name FROM employees e1 JOIN employees e2 on e1.department_id = e2.department_id WHERE e1.first_name = 'Jennifer' AND e1.first_name != e2.first_name AND e1.last_name != e2.last_name ORDER BY e1.employee_id;
SELECT DISTINCT d1.department_id, d1.department_name FROM departments d1 WHERE (SELECT COUNT(department_id) FROM employees WHERE department_id = d1.department_id) = 0;
SELECT e1.first_name, e1.last_name, e1.job_id, departments.department_name, e1.salary, (SELECT grade FROM job_grades WHERE e1.salary BETWEEN min_salary AND max_salary) AS grade FROM employees e1 JOIN departments ON e1.department_id = departments.department_id;
SELECT first_name, last_name FROM employees WHERE salary > (SELECT AVG(salary) FROM employees) ORDER BY salary;
SELECT employee_id, first_name, last_name FROM employees e1 WHERE 0 < (SELECT COUNT(employee_id) FROM employees WHERE department_id = e1.department_id AND last_name LIKE '%u%');